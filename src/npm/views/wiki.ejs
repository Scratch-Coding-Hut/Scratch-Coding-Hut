<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Wiki</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: 'Arial', sans-serif; background: #fff4f4; color: #333; text-align: center; }
    .navbar { display: flex; justify-content: center; align-items: center; background: #ff4d4d; padding: 15px 20px; border-radius: 10px; gap: 15px; }
    .navbar a { color: white; text-decoration: none; font-size: 1.2rem; padding: 10px 15px; border-radius: 5px; transition: background 0.3s; }
    .navbar a:hover { background: #ff1a1a; }
    .wiki-content { max-width: 1000px; margin: 40px auto; background: #ffe6e6; padding: 40px; border-radius: 10px; text-align: left; }
    .wiki-content h2 { color: #e60000; font-size: 2.5rem; margin-bottom: 20px; text-align: center; }
    .wiki-content p { font-size: 1.5rem; color: #333; line-height: 1.6; }
    .comment-section { margin-top: 40px; }
    .comment { background: #fff; padding: 10px; margin: 10px 0; border-radius: 5px; }
    .comment-author { font-weight: bold; }
    .comment-content { font-size: 1rem; margin-top: 5px; }
    .comment-reply { font-size: 0.9rem; color: #888; margin-left: 20px; }
    .comment-form { margin-top: 20px; text-align: left; }
    .comment-input { width: 100%; padding: 10px; margin-top: 10px; font-size: 1rem; border: 1px solid #ccc; border-radius: 5px; }
  </style>
</head>
<body>
  <div class="navbar">
    <a href="/">Home</a>
    <a href="/Wiki/sitemaplinks.html">Create Wiki</a>
    <a href="/Wiki/sitemaplinks.html">Wiki List</a>
  </div>
  <div class="wiki-content">
    <h2><%= title %></h2>
    <p><%= content %></p>
    <p><%= owner %></p>
  </div>

  <div class="comment-section">
    <h3>Comments</h3>
    <% comments.forEach(function(comment) { %>
      <div class="comment" id="comment-<%= comment.id %>">
        <div class="comment-author">
          <%= comment.author %> <small>(<%= new Date(comment.createdAt).toLocaleString() %>)</small>
        </div>
        <div class="comment-content"><%= comment.content %></div>
        <% if (comment.replies.length > 0) { %>
          <div class="comment-replies">
            <% comment.replies.forEach(function(reply) { %>
              <div class="comment-reply">
                <strong><%= reply.author %></strong>: <%= reply.content %> 
                <small>(<%= new Date(reply.createdAt).toLocaleString() %>)</small>
              </div>
            <% }); %>
          </div>
        <% } %>
      </div>
    <% }); %>
  </div>

  <div class="comment-form">
    <h3>Add a Comment</h3>
    <textarea class="comment-input" id="comment-content" placeholder="Write your comment..." rows="4"></textarea>
    <button onclick="submitComment()">Submit</button>
  </div>

  <script>
    // Utility to escape HTML characters for security
    function escapeHtml(str) {
      return str.replace(/[&<>"'`]/g, function(match) {
        const escape = {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#039;',
          "`": '&#x60;'
        };
        return escape[match];
      });
    }

    // Function to submit a comment
    function submitComment() {
      const content = document.getElementById('comment-content').value;
      if (!content.trim()) {
        alert('Comment content cannot be empty');
        return;
      }

      // Get user IP or username
      fetch('https://api.ipify.org?format=json')
        .then(response => response.json())
        .then(data => {
          const ip = data.ip;
          const urlParams = new URLSearchParams(window.location.search);
          const user = atob(urlParams.get('user')) || ip;  // Decode user or use IP

          // Submit the comment
          fetch(`/api/wikis/<%= wikiId %>/comments`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              user: btoa(user), // Encode the user to base64
              content: escapeHtml(content)
            })
          })
          .then(response => response.json())
          .then(comment => {
            // Append the new comment to the comment section
            const commentSection = document.querySelector('.comment-section');
            commentSection.innerHTML += `
              <div class="comment" id="comment-${comment.id}">
                <div class="comment-author">
                  ${comment.author} <small>(${new Date(comment.createdAt).toLocaleString()})</small>
                </div>
                <div class="comment-content">${comment.content}</div>
              </div>
            `;
            // Clear the input
            document.getElementById('comment-content').value = '';
          })
          .catch(error => console.error('Error adding comment:', error));
        });
    }
  </script>
</body>
</html>
